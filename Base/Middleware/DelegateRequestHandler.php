<?php
/*
 * This file is part of the BasePlatform project.
 *
 * (c) BasePlatform project <https://github.com/BasePlatform>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Base\Middleware;

use Interop\Http\Server\RequestHandlerInterface;
use Psr\Http\Message\RequestInterface;
use Psr\Http\Message\ResponseInterface;
use Psr\Http\Message\ServerRequestInterface;
use LogicException;

/**
 * PSR-15 delegate wrapper for internal callbacks generated by {@see Dispatcher} during dispatch.
 *
 * @internal
 */
class DelegateRequestHandler implements RequestHandlerInterface
{
    /**
     * @var Dispatcher
     */
    private $dispatcher;

    /**
     * @var RequestHandlerInterface|null
     */
    private $next;

    /**
     * @param Dispatcher                   $dispatcher
     * @param RequestHandlerInterface|null $next
     */
    public function __construct(Dispatcher $dispatcher, RequestHandlerInterface $next = null)
    {
        $this->dispatcher = $dispatcher;
        $this->next = $next;
    }

    /**
     * {@inheritdoc}
     */
    public function handle(ServerRequestInterface $request)
    {
        $middlewareDefinition = $this->dispatcher->next($request);
        if ($middlewareDefinition === false) {
            if ($this->next !== null) {
                return $this->next->handle($request);
            }
            throw new LogicException('Middleware queue exhausted');
        }
        return $middlewareDefinition->process($request, $this);
    }
}